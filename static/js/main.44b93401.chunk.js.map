{"version":3,"sources":["components/ImageCard/index.js","components/Wrapper/index.js","App.js","index.js"],"names":["ImageCard","props","react_default","a","createElement","className","onClick","handleClick","id","alt","desc","src","Wrapper","filter","displayNone","children","scoreKeeper","addGrayscale","WebkitFilter","WebkitAnimation","noDisplay","display","App","state","images","count","topScore","clicked","message","_this","includes","finalCount","length","setState","shuffle","concat","push","animated","array","i","j","Math","floor","random","_ref","_this2","this","components_Wrapper","style","map","components_ImageCard","key","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.44b93401.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction ImageCard(props) {\n  return (\n<div className=\"card\" onClick={ () => props.handleClick(props.id)}>\n       <img alt={props.desc} src={props.src} className=\"card-img-top\" /> \n    </div>\n  );\n}\n\nexport default ImageCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React, { Component } from 'react';\nimport ImageCards from \"./components/ImageCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport images from \"./images.json\"\nimport \"./App.css\"\n\nlet scoreKeeper = [];\nlet filter;\n\nconst addGrayscale = {\n  WebkitFilter: 'grayscale(100%)',\n  filter: 'grayscale(100%)',\n  WebkitAnimation: 'shake 0.1s ease-in-out 0.1s 2 alternate'\n}\n\nlet displayNone;\nconst noDisplay = {\n  display: 'none'\n}\n\nclass App extends Component {\n\n  state = {\n    images,\n    count: 0,\n    topScore: 0,\n    clicked: [],\n    message: \"Click on an image to get started!\",\n   };\n\n   \n  handleClick = (id) => {\n    //when we click an image we add the concat the id to the \n    //clicked array and if that id is already there when we concat on the click\n    //then we end the game and user clicks to replay\n    if(this.state.clicked.includes(id)){\n      filter = addGrayscale;\n      displayNone = {};\n      const finalCount = scoreKeeper[scoreKeeper.length - 1]\n      this.setState({count: 0})\n      this.setState({clicked: []})\n      this.setState({topScore: finalCount})\n      this.setState({message: \"GAME OVER | click a gif to play again!\"})\n      if(finalCount > this.state.topScore){\n        this.setState({topScore: finalCount})\n      } else {\n        this.setState({topScore: this.state.topScore})\n      }\n      scoreKeeper = [];\n    } else {\n      filter = {};\n      displayNone = noDisplay;\n      this.shuffle(images);\n      this.setState({clicked: this.state.clicked.concat([id])})\n      this.setState({count: this.state.count + 1});\n      this.setState({message: \"NICE, good guess!\"})\n      scoreKeeper.push(this.state.count + 1); \n      this.setState({animated: false})\n    } \n  }\n\n  //use the Fisher-Yates shuffle algorithm\n  shuffle = (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n\n  render() {\n    return (\n      <Wrapper>\n        <nav className=\"navbar\">\n          <span className=\"navbar-brand mb-0 h1 mx-auto\">Clicky Game</span>\n        </nav>\n        <div className=\"container\" style={displayNone}>\n          <div className=\"text-center instructions p-4\">CLICK ON A GIF TO EARN POINTS, BUT DONT CLICK ON ANY MORE THAN ONCE!</div>\n        </div>\n        <div className=\"container gameTextbox\">\n          <div className=\"row p-3\">\n            <div className=\"col-md-6 gameHeadline\">\n              <span>{this.state.message}</span>\n            </div>\n            <div className=\"col-md-6 text-right score\">\n              <span>{`Score: ${this.state.count} | Top Score: ${this.state.topScore}`}</span>\n            </div>\n          </div>\n        </div>\n        <div className=\"container gifBox bg-white mb-5\" style={filter}>\n          <div className=\"card-columns py-3\">\n            {this.state.images.map(images => (\n              <ImageCards\n                id={images.id}\n                key={images.id}\n                desc={images.desc}\n                src={images.src}\n                handleClick={this.handleClick}\n              />\n            ))}\n          </div>\n        </div>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}